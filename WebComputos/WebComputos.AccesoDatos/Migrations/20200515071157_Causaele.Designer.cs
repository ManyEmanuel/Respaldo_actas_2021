// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebComputos.AccesoDatos.Data;

namespace WebComputos.AccesoDatos.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20200515071157_Causaele")]
    partial class Causaele
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(256)")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers");

                    b.HasDiscriminator<string>("Discriminator").HasValue("IdentityUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("WebComputos.Models.Causales", b =>
                {
                    b.Property<int>("IdCausales")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ActAlteraciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActaIlegible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoletasSisCiu")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BoletasSisTot")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CiuVotaron")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCasillaDet")
                        .HasColumnType("int");

                    b.Property<int>("IdEleccion")
                        .HasColumnType("int");

                    b.Property<int>("NumCausales")
                        .HasColumnType("int");

                    b.Property<string>("PaqAlteraciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaqSinAec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VotosNMayor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VotosPartido")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VotosSisAec")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VotosSisBol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCausales");

                    b.HasIndex("IdCasillaDet");

                    b.HasIndex("IdEleccion");

                    b.ToTable("Causales");
                });

            modelBuilder.Entity("WebComputos.Models.Combinaciones", b =>
                {
                    b.Property<int>("idCombinacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Coalicion")
                        .HasColumnType("int");

                    b.Property<string>("Combinacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Tamaño")
                        .HasColumnType("int");

                    b.HasKey("idCombinacion");

                    b.HasIndex("Coalicion");

                    b.ToTable("Combinaciones");
                });

            modelBuilder.Entity("WebComputos.Models.CombinacionesDet", b =>
                {
                    b.Property<int>("idCombinacionesDet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Combinacion")
                        .HasColumnType("int");

                    b.Property<int>("Partido")
                        .HasColumnType("int");

                    b.HasKey("idCombinacionesDet");

                    b.HasIndex("Combinacion");

                    b.HasIndex("Partido");

                    b.ToTable("CombinacionesDet");
                });

            modelBuilder.Entity("WebComputos.Models.DetallesActas", b =>
                {
                    b.Property<int>("IdActaDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Capturado")
                        .HasColumnType("bit");

                    b.Property<int>("IdCasillaDet")
                        .HasColumnType("int");

                    b.Property<int>("IdEleccion")
                        .HasColumnType("int");

                    b.HasKey("IdActaDetalle");

                    b.HasIndex("IdCasillaDet");

                    b.HasIndex("IdEleccion");

                    b.ToTable("DetallesActas");
                });

            modelBuilder.Entity("WebComputos.Models.EstatusActa", b =>
                {
                    b.Property<int>("IdEstatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstatus");

                    b.ToTable("EstatusActas");
                });

            modelBuilder.Entity("WebComputos.Models.EstatusEntrega", b =>
                {
                    b.Property<int>("IdEstatusEntrega")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Diputado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gobernador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCasillaDet")
                        .HasColumnType("int");

                    b.Property<string>("Paquetes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pys")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Regidor")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEstatusEntrega");

                    b.HasIndex("IdCasillaDet");

                    b.ToTable("EstatusEntregas");
                });

            modelBuilder.Entity("WebComputos.Models.RecepcionDetalle", b =>
                {
                    b.Property<int>("IdRecepcionDetalle")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdEleccion")
                        .HasColumnType("int");

                    b.Property<int>("IdPaquete")
                        .HasColumnType("int");

                    b.HasKey("IdRecepcionDetalle");

                    b.HasIndex("IdEleccion");

                    b.HasIndex("IdPaquete");

                    b.ToTable("RecepcionDetalle");
                });

            modelBuilder.Entity("WebComputos.Models.ResultadoComputos", b =>
                {
                    b.Property<int>("IdResultadoCom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdActa")
                        .HasColumnType("int");

                    b.Property<int>("IdCoalicion")
                        .HasColumnType("int");

                    b.Property<int>("IdCombinacion")
                        .HasColumnType("int");

                    b.Property<int>("IdIndependiente")
                        .HasColumnType("int");

                    b.Property<int>("IdPartido")
                        .HasColumnType("int");

                    b.Property<int>("NoRegistrados")
                        .HasColumnType("int");

                    b.Property<int>("Nulos")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("VotosRegistrados")
                        .HasColumnType("int");

                    b.HasKey("IdResultadoCom");

                    b.HasIndex("IdActa");

                    b.ToTable("ResCom");
                });

            modelBuilder.Entity("WebComputos.Models.TActas", b =>
                {
                    b.Property<int>("IdActa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Computo")
                        .HasColumnType("int");

                    b.Property<string>("DesIncidentes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Estatus")
                        .HasColumnType("int");

                    b.Property<int>("IdDetalleActa")
                        .HasColumnType("int");

                    b.Property<bool>("Incidentes")
                        .HasColumnType("bit");

                    b.Property<int>("Sobrantes")
                        .HasColumnType("int");

                    b.Property<int>("TotalVotos")
                        .HasColumnType("int");

                    b.Property<int>("VotosCiu")
                        .HasColumnType("int");

                    b.Property<int>("VotosRep")
                        .HasColumnType("int");

                    b.Property<int>("VotosUrnas")
                        .HasColumnType("int");

                    b.HasKey("IdActa");

                    b.HasIndex("Estatus");

                    b.HasIndex("IdDetalleActa");

                    b.ToTable("TActas");
                });

            modelBuilder.Entity("WebComputos.Models.TCandidato", b =>
                {
                    b.Property<int>("IdCandidato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("ApellidoMat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Coalicion")
                        .HasColumnType("int");

                    b.Property<int>("Demarcacion")
                        .HasColumnType("int");

                    b.Property<int>("Distrito")
                        .HasColumnType("int");

                    b.Property<bool>("EsCoalicion")
                        .HasColumnType("bit");

                    b.Property<int>("Estado")
                        .HasColumnType("int");

                    b.Property<string>("Mote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Municipio")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<int>("Partido")
                        .HasColumnType("int");

                    b.Property<int>("TipoEleccion")
                        .HasColumnType("int");

                    b.HasKey("IdCandidato");

                    b.HasIndex("Coalicion");

                    b.HasIndex("Demarcacion");

                    b.HasIndex("Distrito");

                    b.HasIndex("Municipio");

                    b.HasIndex("Partido");

                    b.HasIndex("TipoEleccion");

                    b.ToTable("TCandidato");
                });

            modelBuilder.Entity("WebComputos.Models.TCasillaDet", b =>
                {
                    b.Property<int>("IdCasillaDet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("BoletasEnt")
                        .HasColumnType("int");

                    b.Property<bool>("Capturado")
                        .HasColumnType("bit");

                    b.Property<int>("ExtContigua")
                        .HasColumnType("int");

                    b.Property<int>("ListadoNominal")
                        .HasColumnType("int");

                    b.Property<int>("NoCasilla")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PadronElec")
                        .HasColumnType("int");

                    b.Property<int>("Seccion")
                        .HasColumnType("int");

                    b.Property<int>("TipoCasilla")
                        .HasColumnType("int");

                    b.HasKey("IdCasillaDet");

                    b.HasIndex("Seccion");

                    b.HasIndex("TipoCasilla");

                    b.ToTable("TCasillaDet");
                });

            modelBuilder.Entity("WebComputos.Models.TCoalicion", b =>
                {
                    b.Property<int>("IdCoalicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Logo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdCoalicion");

                    b.ToTable("TCoalicion");
                });

            modelBuilder.Entity("WebComputos.Models.TCoalicionDet", b =>
                {
                    b.Property<int>("IdCoalicionDet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<int>("Coalicion")
                        .HasColumnType("int");

                    b.Property<int>("Partido")
                        .HasColumnType("int");

                    b.HasKey("IdCoalicionDet");

                    b.HasIndex("Coalicion");

                    b.HasIndex("Partido");

                    b.ToTable("TCoaliciondet");
                });

            modelBuilder.Entity("WebComputos.Models.TDemarcacion", b =>
                {
                    b.Property<int>("idDemarcacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Municipio")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("noDemarcacion")
                        .HasColumnType("int");

                    b.Property<int>("noDemarcacionLast")
                        .HasColumnType("int");

                    b.HasKey("idDemarcacion");

                    b.HasIndex("Municipio");

                    b.ToTable("TDemarcacion");
                });

            modelBuilder.Entity("WebComputos.Models.TDistrito", b =>
                {
                    b.Property<int>("IdDistrito")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Integracion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoDistrito")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdDistrito");

                    b.ToTable("TDistrito");
                });

            modelBuilder.Entity("WebComputos.Models.TMunicipio", b =>
                {
                    b.Property<int>("IdMunicipio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CabMun")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoEstado")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdMunicipio");

                    b.ToTable("TMunicipio");
                });

            modelBuilder.Entity("WebComputos.Models.TOficina", b =>
                {
                    b.Property<int>("IdOficina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Calle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodigoPostal")
                        .HasColumnType("int");

                    b.Property<string>("Colonia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Municipio")
                        .HasColumnType("int");

                    b.Property<string>("NoExterior")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NoInterior")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom_Ofi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siglas_Ofi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("idTrabajador")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdOficina");

                    b.HasIndex("Municipio");

                    b.ToTable("TOficina");
                });

            modelBuilder.Entity("WebComputos.Models.TPartidos", b =>
                {
                    b.Property<int>("IdPartido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Independiente")
                        .HasColumnType("bit");

                    b.Property<string>("LogoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PantoneF")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PantoneL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Prioridad")
                        .HasColumnType("int");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPartido");

                    b.ToTable("TPartido");
                });

            modelBuilder.Entity("WebComputos.Models.TRecepcionPaquetes", b =>
                {
                    b.Property<int>("IdRecepcion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Capturado")
                        .HasColumnType("bit");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Entrega")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaReg")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Hora")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("HoraReg")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCasillaDet")
                        .HasColumnType("int");

                    b.Property<string>("Observaciones")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaqueteElec")
                        .HasColumnType("int");

                    b.Property<int>("SobrePrep")
                        .HasColumnType("int");

                    b.HasKey("IdRecepcion");

                    b.HasIndex("IdCasillaDet");

                    b.ToTable("TRecepcionPaquetes");
                });

            modelBuilder.Entity("WebComputos.Models.TResultadosActas", b =>
                {
                    b.Property<int>("IdResultadoActa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdActa")
                        .HasColumnType("int");

                    b.Property<int>("IdCoalicion")
                        .HasColumnType("int");

                    b.Property<int>("IdCombinacion")
                        .HasColumnType("int");

                    b.Property<int>("IdIndependiente")
                        .HasColumnType("int");

                    b.Property<int>("IdPartido")
                        .HasColumnType("int");

                    b.Property<int>("NoRegistrados")
                        .HasColumnType("int");

                    b.Property<int>("Nulos")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<int>("VotosRegistrados")
                        .HasColumnType("int");

                    b.HasKey("IdResultadoActa");

                    b.HasIndex("IdActa");

                    b.ToTable("TResultadosActas");
                });

            modelBuilder.Entity("WebComputos.Models.TSeccion", b =>
                {
                    b.Property<int>("idSeccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("CabLocalidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Demarcacion")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("Distrito")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("ListadoNominal")
                        .HasColumnType("int");

                    b.Property<int?>("Municipio")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("PElectoral")
                        .HasColumnType("int");

                    b.Property<string>("seccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("idSeccion");

                    b.HasIndex("Demarcacion");

                    b.HasIndex("Distrito");

                    b.HasIndex("Municipio");

                    b.ToTable("TSeccion");
                });

            modelBuilder.Entity("WebComputos.Models.TtipoActa", b =>
                {
                    b.Property<int>("IdActa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TipoEleccion")
                        .HasColumnType("int");

                    b.HasKey("IdActa");

                    b.HasIndex("TipoEleccion");

                    b.ToTable("TtipoActa");
                });

            modelBuilder.Entity("WebComputos.Models.TtipoCasilla", b =>
                {
                    b.Property<int>("IdTipoCasilla")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoCasilla");

                    b.ToTable("TtipoCasilla");
                });

            modelBuilder.Entity("WebComputos.Models.TtipoEleccion", b =>
                {
                    b.Property<int>("idTipoEleccion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siglas")
                        .IsRequired()
                        .HasColumnType("nvarchar(3)")
                        .HasMaxLength(3);

                    b.HasKey("idTipoEleccion");

                    b.ToTable("TtipoEleccion");
                });

            modelBuilder.Entity("WebComputos.Models.ApplicationUser", b =>
                {
                    b.HasBaseType("Microsoft.AspNetCore.Identity.IdentityUser");

                    b.Property<string>("ApellidoMat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ApellidoPat")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConfirmedPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FotoURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdOficina")
                        .HasColumnType("int");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasIndex("IdOficina");

                    b.HasDiscriminator().HasValue("ApplicationUser");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.Causales", b =>
                {
                    b.HasOne("WebComputos.Models.TCasillaDet", "LCasillaDet")
                        .WithMany()
                        .HasForeignKey("IdCasillaDet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TtipoEleccion", "LTipoEleccion")
                        .WithMany()
                        .HasForeignKey("IdEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.Combinaciones", b =>
                {
                    b.HasOne("WebComputos.Models.TCoalicion", "bdCoalicion")
                        .WithMany()
                        .HasForeignKey("Coalicion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.CombinacionesDet", b =>
                {
                    b.HasOne("WebComputos.Models.Combinaciones", "bdCombinacion")
                        .WithMany()
                        .HasForeignKey("Combinacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TPartidos", "bdPartido")
                        .WithMany()
                        .HasForeignKey("Partido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.DetallesActas", b =>
                {
                    b.HasOne("WebComputos.Models.TCasillaDet", "LRecepcionDet")
                        .WithMany()
                        .HasForeignKey("IdCasillaDet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TtipoEleccion", "LtipoEleccion")
                        .WithMany()
                        .HasForeignKey("IdEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.EstatusEntrega", b =>
                {
                    b.HasOne("WebComputos.Models.TCasillaDet", "LCasillaDet")
                        .WithMany()
                        .HasForeignKey("IdCasillaDet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.RecepcionDetalle", b =>
                {
                    b.HasOne("WebComputos.Models.TtipoEleccion", "LtipoEleccion")
                        .WithMany()
                        .HasForeignKey("IdEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TRecepcionPaquetes", "LRecepcionDet")
                        .WithMany()
                        .HasForeignKey("IdPaquete")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.ResultadoComputos", b =>
                {
                    b.HasOne("WebComputos.Models.TActas", "LRespuesta")
                        .WithMany()
                        .HasForeignKey("IdActa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TActas", b =>
                {
                    b.HasOne("WebComputos.Models.EstatusActa", "LEstatus")
                        .WithMany()
                        .HasForeignKey("Estatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.DetallesActas", "LDetalleActa")
                        .WithMany()
                        .HasForeignKey("IdDetalleActa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TCandidato", b =>
                {
                    b.HasOne("WebComputos.Models.TCoalicion", "LCoalicion")
                        .WithMany()
                        .HasForeignKey("Coalicion");

                    b.HasOne("WebComputos.Models.TDemarcacion", "LDemarcacion")
                        .WithMany()
                        .HasForeignKey("Demarcacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TDistrito", "LDistrito")
                        .WithMany()
                        .HasForeignKey("Distrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TMunicipio", "LMunicipio")
                        .WithMany()
                        .HasForeignKey("Municipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TPartidos", "LPartido")
                        .WithMany()
                        .HasForeignKey("Partido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TtipoEleccion", "LTipoEleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TCasillaDet", b =>
                {
                    b.HasOne("WebComputos.Models.TSeccion", "Lseccion")
                        .WithMany()
                        .HasForeignKey("Seccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TtipoCasilla", "LTipocasilla")
                        .WithMany()
                        .HasForeignKey("TipoCasilla")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TCoalicionDet", b =>
                {
                    b.HasOne("WebComputos.Models.TCoalicion", "LCoalicion")
                        .WithMany()
                        .HasForeignKey("Coalicion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TPartidos", "LPartido")
                        .WithMany()
                        .HasForeignKey("Partido")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TDemarcacion", b =>
                {
                    b.HasOne("WebComputos.Models.TMunicipio", "Municipios")
                        .WithMany()
                        .HasForeignKey("Municipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TOficina", b =>
                {
                    b.HasOne("WebComputos.Models.TMunicipio", "Lmunicipio")
                        .WithMany()
                        .HasForeignKey("Municipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TRecepcionPaquetes", b =>
                {
                    b.HasOne("WebComputos.Models.TCasillaDet", "LCasillaDet")
                        .WithMany()
                        .HasForeignKey("IdCasillaDet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TResultadosActas", b =>
                {
                    b.HasOne("WebComputos.Models.TActas", "LRespuesta")
                        .WithMany()
                        .HasForeignKey("IdActa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TSeccion", b =>
                {
                    b.HasOne("WebComputos.Models.TDemarcacion", "Ldemarcacion")
                        .WithMany()
                        .HasForeignKey("Demarcacion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TDistrito", "Ldistrito")
                        .WithMany()
                        .HasForeignKey("Distrito")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebComputos.Models.TMunicipio", "Lmunicipio")
                        .WithMany()
                        .HasForeignKey("Municipio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.TtipoActa", b =>
                {
                    b.HasOne("WebComputos.Models.TtipoEleccion", "LTipoEleccion")
                        .WithMany()
                        .HasForeignKey("TipoEleccion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebComputos.Models.ApplicationUser", b =>
                {
                    b.HasOne("WebComputos.Models.TOficina", "Loficina")
                        .WithMany()
                        .HasForeignKey("IdOficina")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
